/** App specific styles. */
#hookT2S[name=gradient] {
    /* background: url(/images/Background.png); */
    background-size: cover;

    & p {
        color: white;
        padding: 0 5px 0 5px;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);

        &:hover {
            font-weight: bold;
            /* text-shadow: 2px 2px 4px rgba(255, 255, 255, 0.8); */
        }
    }

    & input {
        position: fixed;
        right: 0;
        visibility: hidden;
        width: 0;
    }
}



/** App icons. */
#appButtons {
    align-items: center;
    display: flex;
    gap: 3px;
}
#appButtons .appButton {
    aspect-ratio: 1;
    background-color: var(--overlay-background-color);
    border: var(--alt-border);
    border-radius: 3px;
    color: var(--text-color1);
    font-size: 1.75rem;
    font-weight: bold;
    height: calc(var(--footer-height) - 0.5rem);
    transition: filter 0.3s ease;

    &:hover {filter: invert(0.1)}
    &.selected {filter: invert(0.2)}
    &:hover.selected {filter: invert(0.3);}
    
    &#app_5Button {line-height: 1.5rem;}
}



/** App hooks. */
#hookL {margin-left: 0}
#hookR {
    bottom: 0;
    right: 0;
}

#hookT1, #hookT1S {
    height: 80%;
    z-index: 1;
}
#hookT2, #hookT2S {
    height: 80%;
    min-width: var(--header-height);
    right: 0;
    z-index: 1;
}



/** General app and hook styling. */
.app tr:nth-child(odd), .hook tr:nth-child(odd) {
    background-color: var(--default-background-color);
}

.app {
    background-color: var(--overlay-background-color);
    border: var(--default-border);
    border-radius: 3px;
    display: none;
    overflow: auto;
    position: fixed;
    resize: both;
    transition: opacity 0.3s ease;

    .header {
        background-color: var(--app-header-color);
        border-bottom: var(--alt-border);
        color: var(--text-color1);
        font-weight: bold;
        height: 2rem;
        line-height: 2rem;
        text-align: center;
        width: 100%;

        & button {
            aspect-ratio: 1;
            background-color: var(--overlay-background-color);
            border: var(--alt-border);
            color: var(--text-color1);
            height: 1.5rem;
            margin: 0.25rem;
            position: absolute;
            right: 0;
        }

        & button:hover {filter: invert(0.15)}
    }

    .flexBar button {
        /*background: url("/images/ConfirmButton.png") no-repeat;*/
        background-color: var(--input-background-color);
        background-position: center;
        background-size: cover;
        border: 0;
        border-radius: 5px;
        color: var(--text-color1);
        font-size: 1rem;
        height: 2rem;
        padding: 3px 15px 3px 15px;
        width: fit-content;

        &:hover {
            -webkit-filter: invert(0.1);
            cursor: pointer;
            filter: invert(0.1);
        }
    }

    & p {
        color: var(--text-color1);
        font-size: 2rem;
        margin: 0 10px 0 10px;
        white-space: nowrap;
        width: fit-content;
    }
}

.hook, .hook_static {
    align-items: center;
    background-color: var(--overlay-background-color);
    border: var(--alt-border);
    border-radius: 5px;
    display: inline-flex;
    height: calc(var(--footer-height) - 0.75rem);
    margin: 0.25rem;
    min-width: fit-content;
    padding: 0 5px 0 5px;
    position: relative;
    transition: width 0.3s ease, filter 0.3s ease;
    white-space: nowrap;
    width: fit-content;

    & p {
        font-size: 1.7rem;
        margin: 0;
    }

    .flexBar input {
        transform: translate(0, 0);
    }

    .flexBar button {
        /*background: url("/images/ConfirmButton.png") no-repeat;*/
        background-color: var(--input-background-color);
        background-position: center;
        background-size: cover;
        border: 0;
        border-radius: 5px;
        color: var(--text-color1);
        font-size: 1rem;
        height: 100%;
        padding: 3px 15px 3px 15px;
        width: fit-content;

        &:hover {
            -webkit-filter: invert(0.1);
            cursor: pointer;
            filter: invert(0.1);
        }
    }
}