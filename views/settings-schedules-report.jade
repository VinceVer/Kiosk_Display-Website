doctype html
html(lang='en')
  head
    link(rel='stylesheet' href=`/stylesheets/theme-${layout.theme}.css`)
    link(rel='stylesheet' href='/stylesheets/settings.css')
    link(rel='stylesheet' href='/stylesheets/elements.css')

  body
    nav
      button.HOME(onclick="location.href = '/settings'") HOME
      a.navLink(href="/settings/grouping") Display Groups
      //a.navLink(href="/settings/layout") Display Layout
      a.navLink(href="/settings/apps") Application Naming
      a.navLink(href="/settings/database/conditions") Priority Conditions
      a.navLink(href="/settings/database/filters") Database Filters
      a.navLink(href="/settings/status") Status Messages
      a.navLink.selected(href="/settings/schedules") Schedules
      form#login(onsubmit="testPassword(this.parentNode.querySelector('input').value, event)")
        input(type="password" placeholder=" Log in by entering the site key" required)
        input#loginButton(type="submit" value="\u23CE")
      button#logout(onclick="testPassword('LOGOUT')") Click here to logout

    #display
      .flexBar
        h1 Location: 
          span.t-stress= location
        #syncType.chip-data
      #hrefBar
        | > 
        a(href='/settings') Settings
        |  / 
        a(href='/settings/schedules') Schedules
        |  / 
        a(href='/settings/schedules/report') Report

      h2.header(style="display: inline-block") #{title} (Unfinished)

      form(onsubmit=`uploadScheduleData(event, this, '/update/schedules.json/reports/${index}', getAlertInfo());` autocomplete="off")
        .flexBar(style=`display: ${input_display || "flex"}`)
          h3(style="color: var(--text-color1); margin-top: -2px") Name:
          input(type="text" name="file_name" oninput="updateCodeBar()" placeholder=(new Date().toISOString().slice(0,19).replace("T", " ")) style="width: 15rem" required)
        .flexBar(style="margin-top: 30px")
          h3(style="color: var(--text-color1); margin-top: -2px") Start date:
          input(type="date" name="date_start" oninput="updateCodeBar()" value=(new Date().toISOString().split('T')[0]) style="width: 10rem" required)
        .flexBar(style="margin-top: 6px")
          h3(style="color: var(--text-color1); margin-top: -2px") Start time:
          input(type="time" name="time_start" oninput="updateCodeBar()" value="14:00" style="width: 10rem" required)
        .flexBar(style="margin-top: 5px")
          h3(style="color: var(--text-color1); margin-top: -2px") Repeat:
          select#frequency_select(oninput="this.parentNode.querySelector('input[name=frequency]').value = this.value; this.parentNode.querySelector('input[name=frequency_readable]').value = this.querySelector(`option[value=${this.value}]`).innerText")
            option(value="3600") Every hour
            option(value="21600") Every 6 hours
            option(value="43200") Every 12 hours
            option(value="86400" selected) Every day
            option(value="172800") Every 2 days
            option(value="259200") Every 3 days
            option(value="604800") Every week
            option(value="1209600") Every 2 weeks
            option(value="1M") Every month
            option(value="3M") Every 3 months
            option(value="6M") Every 6 months
            option(value="12M") Every 12 months
          input(type="hidden" name="frequency" value="86400")
          input(type="hidden" name="frequency_readable" value="Every day")
        .flexBar(style="margin-top: 30px")
          h3(style="color: var(--text-color1); margin-top: -2px") Save as:
          select#extension_select(oninput="this.parentNode.querySelector('input').value = this.value")
            option(value=".csv") .csv
            option(value=".html") .html (Webpage)
            option(value=".json") .json
            option(value=".md") .md
            option(value=".txt" selected) .txt (Plain text)
            option(value=".xlsx") .xlsx (Excel worksheet)
          input(type="hidden" name="format" value=".txt")
        .flexBar(style="margin-top: 30px")
          h3(style="color: var(--text-color1); margin-top: -2px") Email output (optional):
          input.hidden#email_recipient(type="email" placeholder="Confirm emails using a komma" oninput="emailInput(this)")
          h3#invalid_email(style="color: var(--alert-color); display: none; font-size: 1.2rem; margin-top: -2px") Invalid Email
        #recipientList(style="height: 45px")
          input(type="hidden" name="email_recipients" value="")
        input(type="hidden" name="type" value="Default")
        input(type="hidden" name="to_include" value="[]")
        input(type="submit" style="margin-top: 15px")

    #alertBox
      h2
      h4
      .flexBar
      .blockActions

    script(src='/javascripts/settings-schedules-report.js')
    script(src='/javascripts/settings-functions.js')

    #templates(style="display: none")
      button#gridTile.gridTile
        .flexBar
          h3
          .chip(style="display:none") Conflict
        p
    
    #data_storage(data-port=port data-config_data=config_data data-schedule_data=schedule_data data-index=index style="display: none" data-write=write)