doctype html
html(lang='en')
  head(data-page=pageType)
    base(href=location.href.split("/")[0]+":"+port)
    link(rel='stylesheet' href=`/stylesheets/theme-${layout.theme}.css`)
    link(rel='stylesheet' href='/stylesheets/settings.css')
    link(rel='stylesheet' href='/stylesheets/elements.css')
  body
    nav
      button.HOME(onclick="location.href = '/settings'") HOME
      a.navLink(href="/settings/grouping") Display Groups
      //a.navLink(href="/settings/layout") Display Layout
      a.navLink(href="/settings/apps") Application Naming
      a.navLink.selected(href="/settings/database/conditions") Priority Conditions
      a.navLink(href="/settings/database/filters") Database Filters
      a.navLink(href="/settings/status") Status Messages
      a.navLink(href="/settings/downloads") Downloads
      //a.navLink(href="/settings/schedules") Schedules
      form#login(onsubmit="testPassword(this.parentNode.querySelector('input').value, event)")
        input(type="password" placeholder=" Log in by entering the site key" required)
        input#loginButton(type="submit" value="\u23CE")
      button#logout(onclick="testPassword('LOGOUT')") Click here to logout

    #display
      .flexBar
        h1 Location: 
          span.t-stress= location
        #syncType.chip-data
      #hrefBar
        | > 
        a(href='/settings') Settings
        |  / 
        a(href='/settings') Database
        |  / 
        a(href='/settings/database/conditions') Conditions
        |  / 
        a(href=`/settings/database/conditions/add?type=${type}`) Add

      h2.header(style="display: inline-block")= title

      form(onsubmit=`uploadConditionData(event, this, getAlertInfo());` autocomplete="off")
        .flexBar(style=`display: ${input_display || "flex"}`)
          h3(style="color: var(--text-color1); margin-top: -2px") Name:
          input#nameInput(type="text" name="name" oninput="updateCodeBar()" placeholder="..." style="width: 10rem")

        .flexBar(style=`align-items: start; display: ${input_display || "flex"}; margin-top: 10px`)
          h3(style="color: var(--text-color1); margin-top: -2px") Applies to:
          .flexBar(style="align-items: start; flex-direction: column; width: fit-content")
            input#applyInput(type="text" name="applies_to" oninput="checkAppliesTo()" placeholder="Leave empty to apply to ALL" style="width: 20rem")
            #applies_toList(style="height: 45px")
              button.gridTile.small(type="button") ALL

        .flexBar(style="align-items: start; margin-top: 10px")
          h3(style="color: var(--text-color1); margin-top: -2px") Enter a rule:
          .flexBar(style="flex-direction: column; width: fit-content")
            input#conditionInput(type="text" name="condition" placeholder="Start typing here..." style="width: 50rem" required)
            #conditionInputACList.acList(style="z-index: 1")
        input(type="submit" style="margin-top: 15px")

      h3(style="color: var(--text-color1); margin-top: 50px") Result:
      div
        button#result.gridTile
          .flexBar
            h3
            .chip-data Conflict
          p

    #alertBox
      h2
      h4
      .flexBar
      .blockActions

    script(src='/javascripts/settings-database-conditions.js')
    script(src='/javascripts/settings-functions.js')
    script.
      const getAlertInfo = () => {
        return { title: "Success", description: `The condition has been ${hrefIndex ? "updated" : "added"} successfully.`, buttons: [{text: "OK", action: () => {location.href = databaseURL+"/conditions"}}] }
      }

    #templates(style="display: none")
      button#gridTile.gridTile
        .flexBar
          h3
          .chip(style="display:none") Conflict
        p

    #data_storage(data-port=port data-config_data=config_data style="display: none" data-write=write)