doctype html
html(lang='en')
  head
    link(rel='stylesheet' href=`/stylesheets/theme-${layout.theme}.css`)
    link(rel='stylesheet' href='/stylesheets/settings-layout.css')
    link(rel='stylesheet' href='/stylesheets/settings.css')
    link(rel='stylesheet' href='/stylesheets/elements.css')
  body
    #brightnessFilter(style=`background-color: rgba(10, 10, 10, ${1 - background_opacity / 100})`)

    .navBar
      nav(style="background-color: rgba(0,0,0,0); height: fit-content;")
        button.HOME(onclick="location.href='/settings'") HOME

    #display
      .flexBar
        h1 Location: 
          span.t-stress= location
        #syncType.chip-data
      #hrefBar(style="text-shadow: 0 0 5px rgba(0, 0, 0, 1)")
        | > 
        a(href='/settings') Settings
        |  / 
        a(href='/settings/layout') Layout

      #settingsInput.cardView
        form(onsubmit=`uploadLayoutData(event, this, \`/update/config.json/layout\`, getAlertInfo() );`)
          button.gridTile(style="padding: 0" type="button" onclick="this.querySelector('input').click()")
            .background_input
              .flexBar
                h3 Background:
              .flexBar
                input(type="file" accept="image/*" name="background" id="background_file_box" onclick="event.stopPropagation()")
          button.gridTile(type="button")
            .flexBar
              h3 Background opacity:
            .flexBar
              input(type="range" name="background_opacity" min="0" max="100" step="1" value=background_opacity)
          button.gridTile(type="button")
            .flexBar
              h3 Size of the kiosk tiles:
            .flexBar
              input(type="range" name="tile_size" value=tile_size)
          button.gridTile(type="button" onclick="this.querySelector('input').checked = !this.querySelector('input').checked")
            .flexBar
              h3 Show location labels:
            .flexBar
              input(type="checkbox" name="show_labels" checked=show_labels onclick="event.stopPropagation()")
          button.gridTile(type="button" onclick="this.querySelector('input').checked = !this.querySelector('input').checked")
            .flexBar
              h3 Align location labels:
            .flexBar
              input(type="checkbox" name="align_labels" checked=align_labels onclick="event.stopPropagation()")
          button#progressButton.gridTile(style="display: block; margin-bottom: 0; text-align: center; width: calc(100% - 10px)")
            input(type="submit")
            .progressBar

    #alertBox
        h2
        h4
        .flexBar
        .blockActions

    script(src='/javascripts/settings-layout.js')
    script(src='/javascripts/settings-functions.js')
    script.
      const getAlertInfo = () => {
        return { title: "Success", description: `The layout has successfully been updated.`, buttons: [{text: "OK", action: () => {location.href = "/settings"}}] }
      }

    #templates(style="display: none")
      button#gridTile.gridTile
        .flexBar
          h3
          .chip(style="display:none") Conflict
        p

    #data_storage(data-port=port data-config_data=config_data style="display: none" data-write=write)