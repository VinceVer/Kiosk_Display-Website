doctype html
html(lang='en')
  head(data-name=name)
    link(rel='stylesheet' href=`/stylesheets/theme-${layout.theme}.css`)
    link(rel='stylesheet' href='/stylesheets/settings.css')
    link(rel='stylesheet' href='/stylesheets/elements.css')
  body
    nav
      button.HOME(onclick="location.href = '/settings'") HOME
      a.navLink(href="/settings/grouping") Display Groups
      //a.navLink(href="/settings/layout") Display Layout
      a.navLink.selected(href="/settings/apps") Application Naming
      a.navLink(href="/settings/database/conditions") Priority Conditions
      a.navLink(href="/settings/database/filters") Database Filters
      a.navLink(href="/settings/status") Status Messages
      a.navLink(href="/settings/downloads") Downloads
      //a.navLink(href="/settings/schedules") Schedules
      form#login(onsubmit="testPassword(this.parentNode.querySelector('input').value, event)")
        input(type="password" placeholder=" Log in by entering the site key" required)
        input#loginButton(type="submit" value="\u23CE")
      button#logout(onclick="testPassword('LOGOUT')") Click here to logout

    #display(style="visibility: visible")
      .flexBar
        h1 Location: 
          span.t-stress= location
        #syncType.chip-data
      #hrefBar
        | > 
        a(href='/settings') Settings
        |  / 
        a(href='/settings/apps') Apps

      h2.header Found Applications:
      #appGrid.cardView(style="display: block")

    #alertBox
      h2
      h4
      .flexBar
      .blockActions

    #tile_CM.contextMenu
      button.title
      button(name="open") Open
      button(name="remove") Remove from configuration

    script(src='/javascripts/settings/settings-functions.js')
    script.
      const loadHEAD = async () => {
        const href =  writeAccess ? appURL : null;
        for (let app in data.applications) {
          document.getElementById("appGrid").appendChild(createTile({title: app.split("-")[0], href: `${href}/${app}`, description: `Full name: ${app}\n`+ (data.applications[app] !== "undefined" ? `Display name: ${data.applications[app]}` : "â€Ž")}));
        }
      }

    #templates(style="display: none")
      button#gridTile.gridTile
        .flexBar
          h3
          .chip(style="display:none") Conflict
        p

    #data_storage(data-config_data=config_data style="display: none" data-write=write)