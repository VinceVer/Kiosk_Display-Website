doctype html
html(lang='en')
  head(data-name=name data-type=type)
    link(rel='stylesheet' href=`/stylesheets/theme-${layout.theme}.css`)
    link(rel='stylesheet' href='/stylesheets/settings.css')
    link(rel='stylesheet' href='/stylesheets/elements.css')
  body
    nav
      button.HOME(onclick="location.href = '/settings'") HOME
      a.navLink(href="/settings/grouping") Display Groups
      //a.navLink(href="/settings/layout") Display Layout
      a.navLink(href="/settings/apps" class=(type === "app" ? "selected" : "")) Application Naming
      a.navLink(href="/settings/database/conditions") Priority Conditions
      a.navLink(href="/settings/database/filters") Database Filters
      a.navLink(href="/settings/status" class=(type === "s_type_add" ? "selected" : "")) Status Messages
      a.navLink(href="/settings/downloads") Downloads
      //a.navLink(href="/settings/schedules") Schedules
      form#login(onsubmit="testPassword(this.parentNode.querySelector('input').value, event)")
        input(type="password" placeholder=" Log in by entering the site key" required)
        input#loginButton(type="submit" value="\u23CE")
      button#logout(onclick="testPassword('LOGOUT')") Click here to logout

    #display(style="visibility: visible")
      .flexBar
        h1 Location: 
          span.t-stress= location
        #syncType.chip-data

      .hrefBar(style=`display: ${type === "app" ? "block" : "none"}`)
        | > 
        a(href='/settings') Settings
        |  / 
        a(href='/settings/apps') Apps
        |  / 
        a(href='/settings/apps/'+name)= name
      .hrefBar(style=`display: ${type === "s_type_add" ? "block" : "none"}`)
        | > 
        a(href='/settings') Settings
        |  / 
        a(href='/settings/status') Status
        |  / 
        a(href='/settings/status/add') Add

      h2.header(style="display: inline-block")= title
        span.t-stress= name
        span= suffix

      form#renameApp(onsubmit=`submitForm(event, this, \`/update/config.json/applications/${name}\`, getAlertInfo("app", this.querySelector('input[name=value]').value) );` style=`display: ${type === "app" ? "inline-block" : "none"}` autocomplete="off")
        input.singleValue(type="text" name="value" placeholder="Start typing here..." required)
        input(type="submit")
      form#addStatusType(onsubmit="submitForm(event, this, '/update/config.json/status_messages/'+this.querySelector('input').value.split(' ')[0].toLowerCase(), getAlertInfo('s_type_add') );" style=`display: ${type === "s_type_add" ? "block" : "none"}` autocomplete="off")
        .flexBar(style="align-items: start; margin-top: 10px")
          h3(style="color: var(--text-color1); margin-top: -2px") Type:
          .flexBar(style="display: inline-flex; flex-direction: column; width: fit-content")
            input#statusTypeInput(type="text" placeholder="Enter a valid type..." required)
            #statusTypeInputACList.acList(style="z-index: 1")
        .flexBar(style="align-items: start; margin-top: 10px")
          h3(style="color: var(--text-color1); margin-top: -2px") Name (optional):
          input#typeNameInput(type="text" name="name" placeholder="Enter a display name...")
        input(type="submit" style="margin-top: 15px")
        input#statusType(type="hidden" name="name")
        input(type="hidden" name="codes" value="{}")

      div
        h3(style="color: var(--text-color1); margin-top: 50px") Result:
        div
          button#result.gridTile
            .flexBar
              h3
              .chip-data(style="display: none") Conflict
            p

    #alertBox
      h2
      h4
      .flexBar
      .blockActions

    script(src='/javascripts/settings/settings-functions.js')
    script(src='/javascripts/settings/settings-edit.js')

    #data_storage(data-config_data=config_data style="display: none" data-write=write)